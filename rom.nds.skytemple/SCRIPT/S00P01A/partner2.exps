import "version.exps"; // Handles game version stuff
import "checks.exps"; 
def 0 {
    if (debug) {
        $SCENARIO_BALANCE_FLAG = 7;
        $PERFORMANCE_PROGRESS_LIST[2] = 1;
        $EVENT_LOCAL = 0;
        //TODO: Here is safe!
        jump @debug_menu;
                                                                                                    
    }
    §decision_tree;
    message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
    message_Talk(" What\'s on your mind, [hero]?");
    switch(message_SwitchMenu(4,6)) {
        case menu("Add To Team"):
            message_Close();
            message_SetFace(ACTOR_ATTENDANT1, FACE_HAPPY, FACE_POS_STANDARD);
            message_Talk(" Sure![K] I\'d love to explore\nwith you today!");
            message_Close();
            ProcessSpecial(PROCESS_SPECIAL_SET_TEAM_SETUP_HERO_AND_PARTNER_ONLY,0,0);
            jump @anything_else;
        case menu("What to do"):
            message_Close();
            message_SetFace(ACTOR_ATTENDANT1, FACE_HAPPY, FACE_POS_STANDARD);
            message_Talk(" Sure! I\'d be happy to give you\na recap on what our goals are, [hero]!\nLet\'s see, according to my notes...");
            call @current_goals;
            jump @anything_else;
        case menu("Any ideas"):
            jump @any_ideas;
        case menu("Just Chatting"):
            message_Close();
            jump @just_chatting;
        case menu("Technical"):
            message_Close();
            §technical_tree;
            message_Talk(" Alright, what do you need?"); 
            switch(message_SwitchMenu(4,1)) {
                case menu("Version"):
                    message_Close();
                    ~GetVersion();
                    jump @technical_tree;
                case menu("Variable Check"):   
                    message_Close();         
                    message_SetFace(ACTOR_ATTENDANT1, FACE_WORRIED, FACE_POS_STANDARD);
                    message_Talk(" Did something break again?[K] I\nhope it\'s an easy fix...[W:30] No worries![K] Just send\nthis list of variables + values to [CS:C]happylappy[CR]!");
                    message_Close();
                    call @variable_checkup;
                    jump @technical_tree;
                case menu("Escape Softlock"):
                    message_SetFace(ACTOR_ATTENDANT1, FACE_WORRIED, FACE_POS_STANDARD);
                    message_Talk(" Yikes![K] That\'s not good... Okay,\nso I can teleport you out, but first, I need you\nto report this to [CS:G]happylappy[CR], okay?");
                    message_Talk(" Just send this list of variables + values to\n[CS:C]happylappy[CR], and we can head home...");
                    message_Close();
                    call @variable_checkup;
                    message_SetFace(ACTOR_ATTENDANT1, FACE_WORRIED, FACE_POS_STANDARD);
                    message_Talk(" Now then, this [M:I1][CS:I]Escape Orb[CR]\nshould get us home.[K] I have one handy just in\ncase we end up stranded somewhere...");
                    message_Close();
                    bgm_FadeOut(30);
                    screen_FadeOut(1,30);
                    supervision_ExecuteCommon(CORO_EVENT_HA_SAME);
                    hold;
                default:
                case menu("Cancel"):
                    message_Close();
                    jump @anything_else;
            }
        case menu("Never Mind"):
        default:
            §shut_up;
            message_Close();
            supervision_Suspend(-2);
            end;
            hold;
    }

    §anything_else;
    message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
    message_Talk(" Anything else, [hero]?");
    switch(message_SwitchMenu(0,1)) {
        case menu("Yes"):
            jump @decision_tree;
        case menu("No"):
        default:
            jump @shut_up;
    }

    §current_goals;
    if ($PERFORMANCE_PROGRESS_LIST[17]) {
        // Dialga Dead
        message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
        message_Talk(" Our current goal is to defeat\nthat wicked [CS:G]Darkrai[CR] in [CS:P]Dark Crater[CR].[K] To open\nthe way, we need the [CS:C]Legendary Treasures[CR]!");
        message_Talk(" We have [quag:1] Treasures\nright now! Let me see how that stacks up against\nwhat we need to face [CS:G]Darkrai[CR]...");
        switch(ProcessSpecial(102,0,1)) { // Instruments
            case 0: // Have all of them!
                switch(dungeon_mode(67)) {
                    case DMODE_OPEN_AND_REQUEST:
                        message_SetFace(ACTOR_ATTENDANT1, FACE_JOYOUS, FACE_POS_STANDARD);
                        message_Talk(" GG [hero]! We did it!");
                        break;
                    case DMODE_OPEN:            
                        message_SetFace(ACTOR_ATTENDANT1, FACE_HAPPY, FACE_POS_STANDARD);
                        message_Talk(" If my records are correct, we\nhave all of the treasures we need![K] Let\'s go to\n[CS:P]Dark Crater[CR] and beat [CS:G]Darkrai[CR], [hero]!");
                        break;
                    default:
                        message_SetFace(ACTOR_ATTENDANT1, FACE_WORRIED, FACE_POS_STANDARD);
                        message_Talk(" According to my notes, we have\nall the [CS:I]Instruments[CR] we need![K] But [CS:P]Dark Crater[CR]\nis still closed?[K] Probably [CS:G]Cryptic[CR]\'s fault!");
                        message_Talk(" Okay, so I can open [CS:P]Dark Crater[CR]\nfor us, but [CS:B]definitely report this as a bug[CR] if\nyou see this message, okay [hero]?");
                        screen_FadeOut(1,30);
                        message_Mail("[CN][partner] pulled out a [CS:I]Rusty Trumpet[CR] and\n[CN]began playing it![K] Suddenly, a beam of light\n[CN]burst out of it, heading to the North-West![W:90]");
                        dungeon_mode(67) = DMODE_OPEN;
                        screen_FadeIn(1,30);
                        message_Talk(" There we go, [CS:G]Cresselia[CR]\nshould be ready for us at [CS:P]Dark Crater[CR]![K]\nDon\'t forget, [CS:B]this wasn\'t supposed to happen![CR]");
                        break;
                }
                break;
            
            case 1: // Missing one!
                message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
                message_Talk(" According to my records, we\'re\njust missing one treasure![K] We need to find\nthat last one before we can go to [CS:P]Dark Crater[CR]!");
                break;
            default: // Missing several!
                message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
                message_Talk(" According to my records, we\'re\nstill missing several treasures![K] We need to\nfind them all before we can go to [CS:P]Dark Crater[CR]!");
                break;
        }
    } else {
        // Dialga Alive!
        message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
        message_Talk(" Our current goal is to defeat\n[CS:G]Dialga[CR] at the pinnacle of [CS:P]Temporal Tower[CR]! To\nget there, we need access to [CS:P]Hidden Land[CR]!");
        message_Talk(" [CS:P]Hidden Land[CR] is only accessible\nfrom [CS:G]Lapras[CR] on the beach. In order to summon\nhim, we need enough [CS:I]Relic Fragment[CR] shards!");
        message_Talk(" We have [quag:0] shards\nright now! Let me see how that stacks up against\nwhat we need to find [CS:P]Hidden Land[CR]...");
        switch(dungeon_mode(38)) { // Hidden Land access?
            case DMODE_OPEN_AND_REQUEST:
                // Cleared Hidden Land!
                message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
                message_Talk(" According to my records,\nwe\'ve already cleared [CS:P]Hidden Land[CR], and\nexplored it top-to-bottom, [hero]!");
                break;
            case DMODE_OPEN:
                // Unlocked Hidden Land!
                message_SetFace(ACTOR_ATTENDANT1, FACE_HAPPY, FACE_POS_STANDARD);
                message_Talk(" According to my records,\n[CS:G]Lapras[CR] is waiting for us on the beach\nto take us to [CS:P]Hidden Land[CR], [hero]!");
                break;
            default: // Hidden Land not Unlocked!
                switch(ProcessSpecial(102,0,0)) { // Fragment Shards
                    case 0: // Have all of them! ... but this is impossible!
                        message_SetFace(ACTOR_ATTENDANT1, FACE_WORRIED, FACE_POS_STANDARD);
                        message_Talk(" According to my notes, we have\nall the [CS:I]Relic Fragment Shards[CR] we need![K] But\n[CS:P]Hidden Land[CR] is closed?[K] Probably [CS:G]Cryptic[CR]\'s fault!");
                        message_Talk(" Okay, so I can open [CS:P]Hidden Land[CR]\nfor us, but [CS:B]definitely report this as a bug[CR] if\nyou see this message, okay [hero]?");
                        screen_FadeOut(1,30);
                        message_Mail("[CN][partner] held their [CS:I]Relic Fragment[CR] high in\n[CN]the air![K] Suddenly, it began to glow, and a beam\n[CN]of light burst out of it, heading for the beach![W:90]");
                        dungeon_mode(38) = DMODE_OPEN;
                        screen_FadeIn(1,30);
                        message_Talk(" There we go, [CS:G]Lapras[CR] should be\nwaiting for us on the beach right now![K] Don\'t\nforget, [CS:B]this wasn\'t supposed to happen![CR]");
                        break;
                    
                    case 1: // Missing one!
                        message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
                        message_Talk(" According to my notes, we are\nmissing just one [CS:I]Relic Fragment Shard[CR].[K] I hope\nit isn\'t too hard to find for you, [hero]!");
                        break;

                    default: // Missing several!
                        message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
                        message_Talk(" According to my notes, we are\nmissing a few [CS:I]Relic Fragment Shards[CR].[K] We need\nthem all in order to reach [CS:P]Hidden Land[CR], okay?");
                        break;      
                }
                break;
        }
        message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
        message_Talk(" Oh right, I almost forgot![K]\nwe also need to have [CS:P]Temporal Tower[CR] itself\nunlocked to be able to make it there!");
        switch(dungeon_mode(41)) { // Temporal Tower access?
            case DMODE_OPEN_AND_REQUEST:
                message_SetFace(ACTOR_ATTENDANT1, FACE_WORRIED, FACE_POS_STANDARD);
                message_Talk(" According to my notes, we\'ve\nmanaged to clear [CS:P]Temporal Tower[CR] without\nbeating [CS:G]Dialga[CR]... [CS:B]this is definitely a bug![CR]");
                break;                    
            case DMODE_OPEN:
                message_SetFace(ACTOR_ATTENDANT1, FACE_HAPPY, FACE_POS_STANDARD);
                message_Talk(" According to my notes, we\'ve\nmanaged to unlock [CS:P]Temporal Tower[CR], so if we\nmade it to [CS:P]Hidden Land[CR], we could beat [CS:G]Dialga[CR]!");
                break;
            default:
                message_Talk(" According to my notes, we still\nneed to find [CS:P]Temporal Tower[CR] before we can\ndefeat [CS:G]Dialga[CR], even if we clear [CS:P]Hidden Land[CR]!");
                message_Talk(" Keep in mind, it\'s very possible\nthat [CS:P]Temporal Tower[CR] is found in [CS:P]Hidden Land[CR].\n[K]If we can clear [CS:P]Hidden Land[CR], we may want to.");
                message_Talk(" Even if we don\'t find [CS:P]Temporal\nTower[CR] there, [CS:G]Lapras[CR] can take us directly to the\ntower if we have it, and [CS:P]Hidden Land[CR] is clear!");
                break;
        }
        
    }
    return;


    §just_chatting;
    debug_Print('PARTNER_MESSAGE_TYPE2');
    message_SetFace(ACTOR_ATTENDANT1, FACE_WORRIED, FACE_POS_STANDARD);
    message_Talk(" Oh uhh... so about that...");
    message_Talk(" In order to give me all of this\nuseful functionality, [CS:G]happylappy[CR] had to gut\nall of my area-specific dialogue...");
    message_Talk(" Sorry about that, but I\'ve been\nprogrammed to not like idle chatter.[K]\nAlthough...");
    message_Mail(" In 0.4.0, you will be able to play\nRock-Paper-Scissors with [partner]!");
    message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
    jump @anything_else;
    
    §any_ideas;
    
    if ($SCENARIO_SUB1 &<< 0) {
    } else {
        message_Talk(" We should go speak to [CS:G]Wigglytuff[CR]\nonce we clear [CS:P]Beach Cave[CR]!");
        message_Close();
        jump @anything_else;
    }
    if ($SCENARIO_SUB1 &<< 5) {
    } else {
        message_Talk(" I hear [CS:G]Bidoof[CR] keeps a diary\nin his guild room. We should go\nsee if there\'s anything juicy in there!");
        message_Close();
        jump @anything_else;
    }
    if ($SCENARIO_SUB1 &<< 6) {
    } else {
        message_Talk(" I hear [CS:G]Wigglytuff[CR] has a\nfun story for us to listen to.\nLet\'s go do that!");
        message_Close();
        jump @anything_else;
    }
    if ($SCENARIO_SUB1 &<< 7) {
    } else {
        message_Talk(" I hear [CS:G]Sunflora[CR] keeps a diary\nin her guild room. We should go\nsee if there\'s anything juicy in there!");
        message_Close();
        jump @anything_else;
    }
    switch (scn($SCENARIO_SUB1)[1]) {
        case &<< 0:
            break;
        default:
            message_Talk(" Didn\'t [CS:G]Chatot[CR] have something\nfor us to do? We should go ask him\nif he needs any help, [hero]!");
            message_Close();
            jump @anything_else;
    }
    
    switch (scn($SCENARIO_SUB1)[1]) {
        case > 4: // At least one shop item bought!
            break;
        default:
            switch (scn($SCENARIO_SUB2)[0]) {
                case &<< 0:
                case &<< 1:
                case &<< 2:
                case &<< 3:
                    break;
                default:
                    message_Talk(" Have we seen our shop items?\nSeems like we haven\'t purchased any yet, so\nwe should try to buy anything important!");
                    message_Close();
                    message_Talk(" Have you checked our shop items yet?");
                    switch(message_SwitchMenu(1,2)) {
                        case menu("Yes"):
                            message_Close();
                            message_Talk(" Okay, let me see...");
                            break;
                        case menu("No"):
                            message_Close();
                            jump @anything_else;
                    }
                    break;
            }
            break;
    }
    if ($SPECIAL_EPISODE_OPEN[0]) {      
        if($SPECIAL_EPISODE_CONQUEST[0]) {
            if ($SCENARIO_SUB5 &<< 2) {
            } else {
                message_Talk(" My notes say that we completed\n[CS:G]Bidoof\'s Wish[CR], but we never got the check for\nspeaking to [CS:G]Marowak[CR] during the episode...");
                message_SetFace(ACTOR_ATTENDANT1, FACE_ANGRY, FACE_POS_STANDARD);
                message_Talk(" The crossroads DID tell you to\ntalk to [CS:G]Marowak[CR] before going to [CS:P]Wish Cave[CR]\nright?[K] Always trust sapient crossroads!");
                message_SetFace(ACTOR_ATTENDANT1, FACE_SIGH, FACE_POS_STANDARD);
                message_Talk(" What am I going to do with you,\n[hero]?[K] Luckily, we only have to start\n[CS:G]Bidoof\'s Wish[CR], not finish it.[K] Alright, let\'s go!");
                message_Close();
                message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
                jump @anything_else;
            }
        } else {
            message_Talk(" My notes say that we can complete\n[CS:G]Bidoof\'s Wish[CR] right now! Let\'s do that!");
            message_Close();
            jump @anything_else;
        }
    }
    if ($SPECIAL_EPISODE_OPEN[1]) {
        if($SPECIAL_EPISODE_CONQUEST[1]) {
        } else {
            message_Talk(" My notes say that we can complete\n[CS:G]Igglybuff the Prodigy[CR] right now! Let\'s do that!");
            message_Close();
            jump @anything_else;
        }
    }
    if ($SPECIAL_EPISODE_OPEN[2]) {
        if($SPECIAL_EPISODE_CONQUEST[2]) {
        } else {
            message_Talk(" My notes say that we can complete\n[CS:G]Today\'s \"Oh My Gosh\"[CR] right now! Let\'s do that!");
            message_Close();
            jump @anything_else;
        }
    }
    if ($SPECIAL_EPISODE_OPEN[3]) {
        if($SPECIAL_EPISODE_CONQUEST[3]) {
        } else {
            message_Talk(" My notes say that we can complete\n[CS:G]Here Comes Team Charm![CR] right now! Let\'s do that!");
            message_Close();
            jump @anything_else;
        }
    }
    if ($SPECIAL_EPISODE_OPEN[4]) {
        if($SPECIAL_EPISODE_CONQUEST[4]) {
        } else {
            message_Talk(" My notes say that we can complete\n[CS:G]In the Future of Darkness[CR] right now! Let\'s do that!");
            message_Close();
            jump @anything_else;
        }
    }
    if ($SUB30_SPOT_LEVEL < 3) {
        message_Talk(" Seems like we\'re missing Project P\ndungeon checks! Let\'s do some recycling, [hero]!");
        jump @anything_else;
    }
    switch(scn($SCENARIO_SUB4)[1]) {
        case &<< 3:
            break;
        default:
            message_Talk(" Seems like we\'re missing a Project P\ntreasure check! Let\'s do some recycling, [hero]!");
            jump @anything_else;
    }
    switch( ProcessSpecial(105,0,1)) {
        case > 0:
            message_Talk(" Seems like we need to make\nmore drinks at the cafe. Any kind will do![K]\nLet\'s go relax at the cafe, [hero]!");
            jump @anything_else;
            break;
        default:
            break;
    }
    if (not debug) {
        switch(ProcessSpecial(109, 0,0)) {
            case >= 8: // MASTER
                message_Talk(" Wow, we\'re Master Rank+ now?\nThat should hold us over until we obtain the\nSecret Rank. Let\'s see what else we have...");
                break; 
            case 7: // HYPER
                message_Talk(" Wow, we\'re Hyper Rank now?\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break; 
            case 6: // ULTRA
                message_Talk(" Wow, we\'re Ultra Rank now?\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break;                 
            case 5: // SUPER
                message_Talk(" Wow, we\'re Super Rank now?\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break;                
            case 4: // DIAMOND
                message_Talk(" Wow, we\'re Diamond Rank now?\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break;                
            case 3: // GOLD
                message_Talk(" Nice, we\'re already Gold Rank!\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break;
            case 2: // SILVER
                message_Talk(" We\'re still only Silver Rank?\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break;
            case 1: // BRONZE
                message_Talk(" We\'re still only Bronze Rank?\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break;
            default: // Normal Rank
                message_Talk(" We\'re still only Normal Rank?\nI didn\'t write down how many rank checks are\nrequired, but we may need to be Master Rank.");
                break;
        }
    }
    switch(scn($SCENARIO_SUB6)[0]) {
        case &<< 4:
            // Deposit 20000G
            message_Talk(" As of right now, we\'ve obtained\na whopping [CS:G]20,000[CR][M:S0]! We only have \"Long\"\nchecks left for [CS:G]Duskull[CR], congrats!");
            break;
        case &<< 3:
            // Deposit 10000G
            message_Talk(" As of right now, we\'ve obtained\na massive [CS:G]10,000[CR][M:S0]! We need to amass 20k\nfor our next [CS:G]Duskull[CR] check, okay [hero]?");
            break;
        case &<< 2:
            // Deposit 5000G
            message_Talk(" As of right now, we\'ve obtained\na sizable [CS:G]5,000[CR][M:S0]! We need to amass 10k\nfor our next [CS:G]Duskull[CR] check, okay [hero]?");
            break;
        case &<< 1:
            // Deposit 100G
            message_Talk(" As of right now, we\'ve obtained\na puny [CS:G]100[CR][M:S0]! We need to amass 5k\nfor our next [CS:G]Duskull[CR] check, okay [hero]?");
            break;
        default:
            message_Talk(" We should put some money into\nDuskull Bank, okay [hero]?");
            break;
    }
    
    message_Talk(" Seems like we only have\ndungeon checks left Pre-Dialga. Let me see...");
    switch(dungeon_mode(1)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Beach Cave[CR] already...[STE]");
            $LOCAL0 = 1;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Beach Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(3)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Drenched Bluff[CR] already...[STE]");
            $LOCAL0 = 3;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Drenched Bluff[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(4)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Mt. Bristle[CR] already...[STE]");
            $LOCAL0 = 4;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Mt. Bristle[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(6)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Waterfall Cave[CR] already...[STE]");
            $LOCAL0 = 6;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Waterfall Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(7)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Apple Woods[CR] already...[STE]");
            $LOCAL0 = 7;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Apple Woods[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(8)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Craggy Coast[CR] already...[STE]");
            $LOCAL0 = 8;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Craggy Coast[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(9)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Side Path[CR] already...[STE]");
            $LOCAL0 = 9;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Side Path[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(10)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Mt. Horn[CR] already...[STE]");
            $LOCAL0 = 10;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Mt. Horn[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(11)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Rock Path[CR] already...[STE]");
            $LOCAL0 = 11;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Rock Path[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(12)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Foggy Forest[CR] already...[STE]");
            $LOCAL0 = 12;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Foggy Forest[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(13)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Forest Path[CR] already...[STE]");
            $LOCAL0 = 13;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Forest Path[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(14)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Steam Cave[CR] already...[STE]");
            $LOCAL0 = 14;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Steam Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(17)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Amp Plains[CR] already...[STE]");
            $LOCAL0 = 17;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Amp Plains[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(20)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Northern Desert[CR] already...[STE]");
            $LOCAL0 = 20;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Northern Desert[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(21)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Quicksand Cave[CR] already...[STE]");
            $LOCAL0 = 21;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Quicksand Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(24)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Crystal Cave[CR] already...[STE]");
            $LOCAL0 = 24;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Crystal Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(25)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Crystal Crossing[CR] already...[STE]");
            $LOCAL0 = 25;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Crystal Crossing[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(27)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Chasm Cave[CR] already...[STE]");
            $LOCAL0 = 27;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Chasm Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(28)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Dark Hill[CR] already...[STE]");
            $LOCAL0 = 28;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Dark Hill[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(29)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Sealed Ruin[CR] already...[STE]");
            $LOCAL0 = 29;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Sealed Ruin[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(32)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Dusk Forest[CR] already...[STE]");
            $LOCAL0 = 32;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Dusk Forest[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(33)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Deep Dusk Forest[CR] already...[STE]");
            $LOCAL0 = 33;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Deep Dusk Forest[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(34)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Treeshroud Forest[CR] already...[STE]");
            $LOCAL0 = 34;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Treeshroud Forest[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(35)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Brine Cave[CR] already...[STE]");
            $LOCAL0 = 35;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Brine Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(38)) {
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Hidden Land[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(180)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[180]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Normal/Fly Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(181)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[181]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Dark/Fire Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(182)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[182]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Rock/Water Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(183)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[183]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Grass Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(184)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[184]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Elec/Steel Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(185)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[185]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Ice/Ground Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(186)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[186]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Fight/Psych Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(187)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[187]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Poison/Bug Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(188)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[188]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Dragon Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(dungeon_mode(189)) {
        case DMODE_OPEN:
            if not ($DUNGEON_CONQUEST_LIST[189]) {
                message_Talk(" According to my notes, we still\nneed to clear the [CS:P]Ghost Maze[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
        default:
            break;
    }
    switch(ProcessSpecial(105,0,0)) {
        case > 0:
            message_Talk(" Seems like we need to make\nmore drink events at the cafe. [CS:I]Hunger Seeds[CR]\nhave the highest chance for a drink event!");
            message_Talk(" Gummis are also pretty good, but\nlet\'s see if there\'s anything else we can do...");
        default:
            break;
    }
    if ($PERFORMANCE_PROGRESS_LIST[17]) { // Is Dialga down?
    } else {
        §out_of_checks;
        message_SetFace(ACTOR_ATTENDANT1,FACE_WORRIED,FACE_POS_STANDARD);
        message_Talk(" I think that\'s everything\nwe can do right now, [hero].\nCan you double check your tracker?");
        message_Talk(" It\'s possible I missed something,\nand please let [CS:G]happylappy[CR] know if I did!");
        message_SetFace(ACTOR_ATTENDANT1,FACE_NORMAL,FACE_POS_STANDARD);
        message_Close();
        jump @anything_else;
    }
    if ($PERFORMANCE_PROGRESS_LIST[24]) {
    } else {
        if($PERFORMANCE_PROGRESS_LIST[23]) {
            if ($SCENARIO_SUB1 &<< 6) { // Phione Dew
            } elseif ($SCENARIO_SUB1 &<< 5) {
                switch(dungeon_mode(51)) { // Miracle Sea unlocked and uncleared?
                    case DMODE_OPEN:            
                        message_Talk(" We need to get [CS:G]Manaphy[CR]\nanother [CS:I]Blue Gummi[CR], [hero]![K]\nLet\'s go do that!");
                        message_Close();
                        jump @anything_else;
                    default:
                        break;
                }
            } elseif ($SCENARIO_SUB1 &<< 4) { // 2x Blue Gummis
                message_Talk(" We need to get [CS:G]Manaphy[CR]\nanother [CS:I]Blue Gummi[CR], [hero]![K]\nLet\'s go do that!");
                message_Close();
                jump @anything_else;
            } else {
                message_Talk(" We need to get [CS:G]Manaphy[CR]\na [CS:I]Blue Gummi[CR], [hero]![K]\nLet\'s go do that!");
                message_Close();
                jump @anything_else;
            }
        }
    }
    switch ( scn($SCENARIO_SUB3)[1] ) { // Cresselia Freebie!
        case &<< 5:
            break;
        default:
            message_Talk(" We could go recruit\n[CS:G]Cresselia[CR] at [CS:P]Sharpedo Bluff[CR]\nright now, so let\'s do that!");
            message_Close();
            jump @anything_else;
    }
    
    switch ( scn($SCENARIO_SUB2)[1] ) { // Dialga Recruit!
        case &<< 4:
            break;
        default:
            message_Talk(" We could go recruit\n[CS:G]Dialga[CR] at [CS:P]Temporal Tower[CR]\nright now, so let\'s do that!");
            message_Close();
            jump @anything_else;
    }
    
    switch(dungeon_mode(14)) {
        case DMODE_OPEN_AND_REQUEST:
            switch ( scn($SCENARIO_SUB2)[1] ) { // Uxie Check claimed?
                case &<< 1:
                    break;
                default:
                    message_Talk(" We could go recruit\n[CS:G]Uxie[CR] in [CS:P]Steam Cave[CR]\nright now, so let\'s do that!");
                    message_Close();
                    jump @anything_else;
            }
        default:
            break;
    }

    switch(dungeon_mode(21)) {
        case DMODE_OPEN_AND_REQUEST:
            switch ( scn($SCENARIO_SUB2)[1] ) { // Mesprit Check Claimed?
                case &<< 2:
                    break;
                default:
                    message_Talk(" We could go recruit\n[CS:G]Mesprit[CR] in [CS:P]Quiksand Desert[CR]\nright now, so let\'s do that!");
                    message_Close();
                    jump @anything_else;
            }
        default:
            break;
    }
    
    switch(dungeon_mode(25)) {
        case DMODE_OPEN_AND_REQUEST:
            switch ( scn($SCENARIO_SUB2)[1] ) { // Azelf Check claimed?
                case &<< 3:
                    break;
                default:
                    message_Talk(" We could go recruit\n[CS:G]Azelf[CR] in [CS:P]Crystal Crossing[CR]\nright now, so let\'s do that!");
                    message_Close();
                    jump @anything_else;
            }
        default:
            break;
    }
    
    switch(dungeon_mode(51)) {
        case DMODE_OPEN_AND_REQUEST:
            switch ( scn($SCENARIO_SUB2)[1] ) { // Phione Check claimed?
                case &<< 5:
                    break;
                default:
                    message_Talk(" We could go recruit\n[CS:G]Phione[CR] in [CS:P]Miracle Sea[CR]\nright now, so let\'s do that!");
                    message_Close();
                    jump @anything_else;
            }
        default:
            break;
    }

    switch(dungeon_mode(64)) {
        case DMODE_OPEN_AND_REQUEST:
            switch ( scn($SCENARIO_SUB2)[1] ) { // Phione Check claimed?
                case &<< 5:
                    break;
                default:
                    message_Talk(" We could go recruit\n[CS:G]Palkia[CR] in [CS:P]Spacial Rift[CR]\nright now, so let\'s do that!");
                    message_Close();
                    jump @anything_else;
            }
        default:
            break;
    }

    switch(dungeon_mode(120)) {
        case DMODE_OPEN_AND_REQUEST:
            switch ( scn($SCENARIO_SUB3)[1] ) { // Shaymin Check claimed?
                case &<< 6:
                    break;
                default:
                    message_Talk(" We could go recruit\n[CS:G]Shaymin[CR] atop [CS:P]Sky Peak[CR]\nright now, so let\'s do that!");
                    message_Close();
                    jump @anything_else;
            }
        default:
            break;
    }
    if ($SUB30_SPOT_LEVEL < 5) {
        message_Talk(" Seems like we\'re missing Project P\ndungeon checks! Let\'s do some recycling, [hero]!");
        jump @anything_else;
    }
    switch(dungeon_mode(120)) {
        case DMODE_OPEN_AND_REQUEST:
            switch(dungeon_mode(117)) {
                case DMODE_OPEN_AND_REQUEST:
                    if ($SCENARIO_SUB5 &<< 1) {
                    } else {
                        message_Talk(" I wonder how [CS:G]Sneasel[CR] is doing?[K]\nWe should head to [CS:P]7th Station Pass[CR]\nand ask [CS:G]Ampharos[CR] about it, [hero]!");
                        jump @anything_else; 
                    }
                default:
                    break;
            }
        default:
            break;
    }
    
    message_Talk(" Seems like we only have\ndungeon checks left before [CS:G]Darkrai[CR]. Let me see...");
    switch(dungeon_mode(44)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Mystifying Forest[CR] already...[STE]");
            $LOCAL0 = 44;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Mystifying Forest[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(46)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Blizzard Island[CR] already...[STE]");
            $LOCAL0 = 46;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Blizzard Island[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(47)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Crevice Cave[CR] already...[STE]");
            $LOCAL0 = 47;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Crevice Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(50)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Surrounded Sea[CR] already...[STE]");
            $LOCAL0 = 50;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Surrounded Sea[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(51)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Miracle Sea[CR] already...[STE]");
            $LOCAL0 = 51;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Miracle Sea[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(62)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Mt. Travail[CR] already...[STE]");
            $LOCAL0 = 62;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Mt. Travail[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(63)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]The Nightmare[CR] already...[STE]");
            $LOCAL0 = 63;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]The Nightmare[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(64)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Spacial Rift[CR] already...[STE]");
            $LOCAL0 = 64;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Spacial Rift[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(70)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Concealed Ruins[CR] already...[STE]");
            $LOCAL0 = 70;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Concealed Ruins[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(72)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Marine Resort[CR] already...[STE]");
            $LOCAL0 = 72;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Marine Resort[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(87)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Serenity River[CR] already...[STE]");
            $LOCAL0 = 87;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Serenity River[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(88)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Landslide Cave[CR] already...[STE]");
            $LOCAL0 = 88;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Landslide Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(89)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Lush Prairie[CR] already...[STE]");
            $LOCAL0 = 89;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Lush Prairie[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(90)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Tiny Meadow[CR] already...[STE]");
            $LOCAL0 = 90;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Tiny Meadow[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(91)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Labyrinth Cave[CR] already...[STE]");
            $LOCAL0 = 91;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Labyrinth Cave[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(92)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Oran Forest[CR] already...[STE]");
            $LOCAL0 = 92;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Oran Forest[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(93)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Lake Afar[CR] already...[STE]");
            $LOCAL0 = 93;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Lake Afar[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(94)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Happy Outlook[CR] already...[STE]");
            $LOCAL0 = 94;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Happy Outlook[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(95)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Mt. Mistral[CR] already...[STE]");
            $LOCAL0 = 95;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Mt. Mistral[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(96)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Shimmer Hill[CR] already...[STE]");
            $LOCAL0 = 96;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Shimmer Hill[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(97)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Lost Wilderness[CR] already...[STE]");
            $LOCAL0 = 97;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Lost Wilderness[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(98)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Midnight Forest[CR] already...[STE]");
            $LOCAL0 = 98;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Midnight Forest[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(111)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]1st Station Pass[CR] already...[STE]");
            $LOCAL0 = 111;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]1st Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(112)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]2nd Station Pass[CR] already...[STE]");
            $LOCAL0 = 112;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]2nd Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(113)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]3rd Station Pass[CR] already...[STE]");
            $LOCAL0 = 113;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]3rd Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(114)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]4th Station Pass[CR] already...[STE]");
            $LOCAL0 = 114;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]4th Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(115)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]5th Station Pass[CR] already...[STE]");
            $LOCAL0 = 115;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]5th Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(116)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]6th Station Pass[CR] already...[STE]");
            $LOCAL0 = 116;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]6th Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(117)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]7th Station Pass[CR] already...[STE]");
            $LOCAL0 = 117;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]7th Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(118)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]8th Station Pass[CR] already...[STE]");
            $LOCAL0 = 118;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]8th Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(119)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]9th Station Pass[CR] already...[STE]");
            $LOCAL0 = 119;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]9th Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(120)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Summit Station Pass[CR] already...[STE]");
            $LOCAL0 = 120;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Summit Station Pass[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    switch(dungeon_mode(174)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[STS] According to my notes, we\'ve\ncleared [CS:P]Star Cave2[CR] already...[STE]");
            $LOCAL0 = 174;
            call @missions_check;
            break;
        case DMODE_OPEN:
            message_Talk(" According to my notes, we still\nneed to clear [CS:P]Star Cave2[CR]! Let\'s go\ndo that now, [hero]!");
            jump @anything_else;
        default:
            break;
    }
    message_Talk(" That\'s right, we have access\nto [CS:P]Aegis Cave[CR] now! Let\'s see...");
    
    switch(dungeon_mode(54)) {
        case DMODE_OPEN:
            if ($DUNGEON_CONQUEST_LIST[54]) {   
            } else {
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Ice Aegis Cave[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            }
            
            $LOCAL0 = 0;
            
            if ($SCENARIO_MAIN_BIT_FLAG[43]) {
                message_Talk(" Yay! We have the Ice Seal!");
                $LOCAL0 += 4;
            } else {
                message_Talk("We don\'t have the Ice Seal yet...[W:30]\nIt would be dangerous, but we could go deeper in anyway...");
            }
            if ($DUNGEON_CONQUEST_LIST[55]) {
                if ($SCENARIO_MAIN_BIT_FLAG[43]) { 
                    if ($SCENARIO_SUB5 &<< 5) {
                    } else {
                        message_Talk(" We still need to recruit [CS:G]Regice[CR]!\nLet\'s go do that, [hero]!");
                        jump @anything_else;
                    }
                }
            } else {
                message_Talk(" According to my notes, we still\nneed to challenge [CS:G]Regice[CR]! We could do that...");
                if ($LOCAL0 >= 4) {
                    jump @anything_else;
                }
            }
            if ($DUNGEON_CONQUEST_LIST[56]) { 
            } else {
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Rock Aegis Cave[CR]! We could do that...");
                if ($SCENARIO_MAIN_BIT_FLAG[43]) {
                } else {
                    jump @anything_else;
                }
            }
            if ($SCENARIO_MAIN_BIT_FLAG[44]) {
                message_Talk(" Yay! We have the Rock Seal!");
                $LOCAL0 += 2;
            } else {
                message_Talk("We don\'t have the Rock Seal yet...[W:30]\nIt would be dangerous, but we could go deeper in anyway...");
            }
            
            if ($DUNGEON_CONQUEST_LIST[57]) {
                if ($SCENARIO_MAIN_BIT_FLAG[44]) { 
                    if ($SCENARIO_SUB5 &<< 6) {
                    } else {
                        message_Talk(" We still need to recruit [CS:G]Regirock[CR]!\nWe could do that...");
                        if ($LOCAL0 >= 6) {
                            jump @anything_else;
                        }
                    }
                }
            } else {
                message_Talk(" According to my notes, we still\nneed to challenge [CS:G]Regirock[CR]! We could do that...");
                if ($LOCAL0 >= 6) {
                    jump @anything_else;
                }
            }
            
            if ($DUNGEON_CONQUEST_LIST[58]) {   
            } else {
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Steel Aegis Cave[CR]! We could do that...");
                if ($LOCAL0 >= 6) {
                    jump @anything_else;
                }
            }
            if ($SCENARIO_MAIN_BIT_FLAG[45]) {
                message_Talk(" Yay! We have the Steel Seal!");
                $LOCAL0 += 1;
            } else {
                message_Talk("We don\'t have the Steel Seal yet...[W:30]\nIt would be dangerous, but we could go deeper in anyway...");
            }
            
            if ($DUNGEON_CONQUEST_LIST[59]) {
                if ($SCENARIO_MAIN_BIT_FLAG[45]) { 
                    if ($SCENARIO_SUB5 &<< 7) {
                    } else {
                        message_Talk(" We still need to recruit [CS:G]Regirock[CR]!\nWe could do that...");
                        if ($LOCAL0 >= 7) {
                            jump @anything_else;
                        }
                    }
                }
            } else {
                message_Talk(" According to my notes, we still\nneed to challenge [CS:G]Registeel[CR]! We could do that...");
                if ($LOCAL0 >= 7) {
                    jump @anything_else;
                }
            }
            
            if ($DUNGEON_CONQUEST_LIST[60]) {   
            } else {
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Aegis Cave Pit[CR]! We could do that...");
                if ($LOCAL0 >= 7) {
                    jump @anything_else;
                }
            }
            if ($DUNGEON_CONQUEST_LIST[61]) {   
                if ($LOCAL0 == 7) {
                    switch(scn($SCENARIO_SUB5)[1]) {
                        case &<< 0:
                            break;
                        default:
                            message_Talk(" According to my notes, we still\nneed to recruit [CS:G]Regigigas[CR]! We should go do that!");
                            jump @anything_else;
                    }
                }
            } else {
                message_Talk(" According to my notes, we still\nneed to challenge [CS:G]Regigigas[CR]! We could do that...");
                if ($LOCAL0 >= 7) {
                    jump @anything_else;
                }
            }
        default:
            break;
    }

    if ($PERFORMANCE_PROGRESS_LIST[22]) {
        message_Talk(" We also have the\n[CS:C]Secret Rank[CR] now! Let\'s see..");
        if ($SCENARIO_SUB4 &<< 0) {
        } else {
            message_Talk(" Be sure to check the cafe each\nday for a letter from the federation![K]\nWe still need the [CS:C]Aqua-Monica Mission[CR]!"); 
            message_Talk(" Let\'s see what we can do\nin the mean time though...");
        }
        if ($SCENARIO_SUB4 &<< 1) {
        } else {
            message_Talk(" Be sure to check the cafe each\nday for a letter from the federation![K]\nWe still need the [CS:C]Terra Cymbal Mission[CR]!"); 
            message_Talk(" Let\'s see what we can do\nin the mean time though...");
        }
        if ($SCENARIO_SUB4 &<< 2) {
        } else {
            message_Talk(" Be sure to check the cafe each\nday for a letter from the federation![K]\nWe still need the [CS:C]Icy Flute Mission[CR]!"); 
            message_Talk(" Let\'s see what we can do\nin the mean time though...");
        }
        if ($SCENARIO_SUB4 &<< 3) {
        } else {
            message_Talk(" Be sure to check the cafe each\nday for a letter from the federation![K]\nWe still need the [CS:C]Fiery Drum Mission[CR]!"); 
            message_Talk(" Let\'s see what we can do\nin the mean time though...");
        }
        if ($SCENARIO_SUB4 &<< 4) {
        } else {
            message_Talk(" Be sure to check the cafe each\nday for a letter from the federation![K]\nWe still need the [CS:C]Rock Horn Mission[CR]!"); 
            message_Talk(" Let\'s see what we can do\nin the mean time though...");
        }
        if ($SCENARIO_SUB4 &<< 5) {
        } else {
            message_Talk(" Be sure to check the cafe each\nday for a letter from the federation![K]\nWe still need the [CS:C]Sky Melodica Mission[CR]!"); 
            message_Talk(" Let\'s see what we can do\nin the mean time though...");
        }
        if ($SCENARIO_SUB4 &<< 6) {
        } else {
            message_Talk(" Be sure to check the cafe each\nday for a letter from the federation![K]\nWe still need the [CS:C]Grass Cornet Mission[CR]!"); 
            message_Talk(" Let\'s see what we can do\nin the mean time though...");
        }
        
        switch(dungeon_mode(73)) {
            case DMODE_OPEN_AND_REQUEST:
                message_Talk(" According to my notes, we\'ve\ncleared [CS:P]Bottomless Sea[CR] already...");
                $LOCAL0 = 73;
                call @missions_check;
                switch ( scn($SCENARIO_SUB2)[1] ) { // Kyogre Checks Claimed?
                    case &<< 7:
                        break;
                    default:
                        message_Talk(" We do still need to recruit\n[CS:G]Kyogre[CR] though, let\'s go do that!");
                        message_Close();
                        jump @anything_else;
                }
                break;
            case DMODE_OPEN:
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Bottomless Sea[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            default:
                break;
        }
        switch(dungeon_mode(75)) {
            case DMODE_OPEN_AND_REQUEST:
                message_Talk(" According to my notes, we\'ve\ncleared [CS:P]Shimmer Desert[CR] already...");
                $LOCAL0 = 75;
                call @missions_check;
                switch ( scn($SCENARIO_SUB3)[0] ) { // Groudon Checks Claimed?
                    case &<< 1:
                        break;
                    default:
                        message_Talk(" We do still need to recruit\n[CS:G]Groudon[CR] though, let\'s go do that!");
                        message_Close();
                        jump @anything_else;
                }
                break;
            case DMODE_OPEN:
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Shimmer Desert[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            default:
                break;
        }
        switch(dungeon_mode(77)) {
            case DMODE_OPEN_AND_REQUEST:
                message_Talk(" According to my notes, we\'ve\ncleared [CS:P]Mt. Avalanche[CR] already...");
                $LOCAL0 = 77;
                call @missions_check;
                switch ( scn($SCENARIO_SUB3)[0] ) { // Articuno Checks Claimed?
                    case &<< 3:
                        break;
                    default:
                        message_Talk(" We do still need to recruit\n[CS:G]Articuno[CR] though, let\'s go do that!");
                        message_Close();
                        jump @anything_else;
                }
                break;
            case DMODE_OPEN:
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Mt. Avalanche[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            default:
                break;
        }
        switch(dungeon_mode(79)) {
            case DMODE_OPEN_AND_REQUEST:
                message_Talk(" According to my notes, we\'ve\ncleared [CS:P]Giant Volcano[CR] already...");
                $LOCAL0 = 79;
                call @missions_check;
                switch ( scn($SCENARIO_SUB3)[0] ) { // Heatran Checks Claimed?
                    case &<< 5:
                        break;
                    default:
                        message_Talk(" We do still need to recruit\n[CS:G]Heatran[CR] though, let\'s go do that!");
                        message_Close();
                        jump @anything_else;
                }
                break;
            case DMODE_OPEN:
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Giant Volcano[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            default:
                break;
        }
        switch(dungeon_mode(81)) {
            case DMODE_OPEN_AND_REQUEST:
                message_Talk(" According to my notes, we\'ve\ncleared [CS:P]World Abyss[CR] already...");
                $LOCAL0 = 81;
                call @missions_check;
                switch ( scn($SCENARIO_SUB3)[0] ) { // Giratina Checks Claimed?
                    case &<< 7:
                        break;
                    default:
                        message_Talk(" We do still need to recruit\n[CS:G]Giratina[CR] though, let\'s go do that!");
                        message_Close();
                        jump @anything_else;
                }
                break;
            case DMODE_OPEN:
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]World Abyss[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            default:
                break;
        }
        switch(dungeon_mode(83)) {
            case DMODE_OPEN_AND_REQUEST:
                message_Talk(" According to my notes, we\'ve\ncleared [CS:P]Sky Stairway[CR] already...");
                $LOCAL0 = 83;
                call @missions_check;
                switch ( scn($SCENARIO_SUB3)[1] ) { // Rayquaza Checks Claimed?
                    case &<< 1:
                        break;
                    default:
                        message_Talk(" We do still need to recruit\n[CS:G]Rayquaza[CR] though, let\'s go do that!");
                        message_Close();
                        jump @anything_else;
                }
                break;
            case DMODE_OPEN:
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Sky Stairway[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            default:
                break;
        }
        switch(dungeon_mode(85)) {
            case DMODE_OPEN_AND_REQUEST:
                message_Talk(" According to my notes, we\'ve\ncleared [CS:P]Mystery Jungle[CR] already...");
                $LOCAL0 = 85;
                call @missions_check;
                switch ( scn($SCENARIO_SUB3)[1] ) { // Mew Checks Claimed?
                    case &<< 3:
                        break;
                    default:
                        message_Talk(" We do still need to recruit\n[CS:G]Mew[CR] though, let\'s go do that!");
                        message_Close();
                        jump @anything_else;
                }
                break;
            case DMODE_OPEN:
                message_Talk(" According to my notes, we still\nneed to clear [CS:P]Mystery Jungle[CR]! Let\'s go\ndo that now, [hero]!");
                jump @anything_else;
            default:
                break;
        }
    }
    
    message_SetFace(ACTOR_ATTENDANT1,FACE_WORRIED,FACE_POS_STANDARD);
    message_Talk(" Wow, slim pickings, huh?[K]\nI don\'t know all of your yaml settings, but\nusually the rest of these are non-essential...");
    switch(scn($SCENARIO_SUB6)[1]) {
        case &<< 1:
            message_Talk(" Nope, we've already seen\n[CS:G]Ludicolo[CR] and the [CS:G]Bellossom[CR] dance in the cafe...");
            break;
        default:
            message_Talk(" Ooh, this one doesn't sound so\nbad![K] We just need to win the grand prize from\n[CS:G]Wynaut[CR] at the Recycle Shop! To the cafe!");
            jump @anything_else;
    }
    switch(dungeon_mode(107)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Oblivion Forest[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Oblivion Forest[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(108)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Treacherous Waters[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Treacherous Waters[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(109)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Southeastern Islands[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Southeastern Islands[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(110)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Inferno Cave[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Inferno Cave[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(191)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared the [CS:P]Final Maze[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Final Maze[CR] yet.[K] There are two checks\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(99)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Zero Isle North[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Zero Isle North[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(100)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Zero Isle East[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Zero Isle East[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(101)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Zero Isle West[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Zero Isle West[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(102)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Zero Isle South[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Zero Isle South[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(103)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Zero Isle Center[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Zero Isle Center[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    switch(dungeon_mode(104)) {
        case DMODE_OPEN_AND_REQUEST:
            message_Talk(" Nope, we\'ve already\ncleared [CS:P]Destiny Tower[CR]...[W:30] Hmm...[W:30]");
            break;
        case DMODE_OPEN:
            message_Talk(" Okay, so we haven\'t done\nthe [CS:P]Destiny Tower[CR] yet.[K] Yup, there\'s a check\nfor that...[W:30] Yeah let's see what else is left...");
        default:
            break;
    }
    if ($PERFORMANCE_PROGRESS_LIST[22]) {
        switch(scn($SCENARIO_SUB4)[1]) {
            case &<< 2:
                message_Talk(" Nope, we even have the check\nbehind getting to Guildmaster Rank!");
                break;
            case &<< 1:
                message_Talk(" We also have the check behind\ngetting to Master [M:S3][M:S3][M:S3] Rank, but we still need\nGuildmaster if you made all checks essential...");
                break;
            case &<< 0:
                message_Talk(" We also have the check behind\ngetting to Master [M:S3][M:S3] Rank, but we still need\nGuildmaster if you made all checks essential...");
                break;
            default:
                switch(scn($SCENARIO_SUB4)[0]) {
                    case &<< 7:
                        message_Talk(" We also have the check behind\ngetting to Master [M:S3] Rank, but we still need\nGuildmaster if you made all checks essential...");
                        break;
                    default:
                        message_Talk(" Okay, so we still need to obtain\nMaster [M:S3], Master [M:S3][M:S3], Master [M:S3][M:S3][M:S3], and even\nGuildmaster Rank if they\'re essential for you...");
                        break;        
                }
                break;        
        }
    }
    switch(scn($SCENARIO_SUB6)[0]) {
        case &<< 7:
            // Deposit 9999999G
            message_Talk(" Wait a minute, do we really\nhave [CS:G]9,999,999[CR][M:S0]? Okay, we're done with\n[CS:G]Duskull[CR] checks, that's incredible!");
            break;
        case &<< 6:
            // Deposit 100000G
            message_Talk(" As of right now, we\'ve obtained\na staggering [CS:G]100,000[CR][M:S0]! We still have 9 Mil\nleft for [CS:G]Duskull[CR] checks, I suppose...");
            break;
        case &<< 5:
            // Deposit 50000G
            message_Talk(" As of right now, we\'ve obtained\na nutty [CS:G]50,000[CR][M:S0]! We still have 100k\nleft for [CS:G]Duskull[CR] checks, I suppose...");
            break;
        default:
            message_Talk(" Did you enable \"Long\" checks?\nIf so, we need to put [CS:G]50,000[CR][M:S0] into Duskull\nBank for a check![K] Let\'s make some dough, OK?");
            jump @anything_else;
    }
    jump @out_of_checks;
    §missions_check;
    $LOCAL1 = value($DUNGEON_ENTER_INDEX);
    $DUNGEON_ENTER_INDEX = value($LOCAL0);
    switch(ProcessSpecial(101, 0, 1)) { // Outlaws
        case > 0:
            message_Talk(" However, we have at\nleast one outlaw mission left there!");
            message_Close();
            $DUNGEON_ENTER_INDEX = value($LOCAL1);
            jump @anything_else;
        case 0:
            break;
    }
    switch(ProcessSpecial(101, 0, 0)) { // Jobs
        case > 0:
            message_Talk(" However, we have at\nleast one regular job left there!");
            message_Close();
            $DUNGEON_ENTER_INDEX = value($LOCAL1);
            jump @anything_else;
        case 0:
            break;
    }
    message_Talk("[STS] And we\'ve cleared all of\nour missions there! Well done, [hero]![STS]");
    message_Close();
    $DUNGEON_ENTER_INDEX = value($LOCAL1);
    return;
    §debug_menu;
    message_Notice("[M:D2][CS:C]Choose Debug Setting[CR]");        
    switch ( message_SwitchMenu(0, 1) ) {
        case menu("Bag Size (Old)"):
            message_Close();
            message_Notice("[M:D2][CS:C]Pick a bag size:[CR]");  
            switch ( message_SwitchMenu(0, 1) ) {
                case menu("Size 7"):
                    $SCENARIO_BALANCE_FLAG = 7;
                    break;
                case menu("Size 6"):
                    $SCENARIO_BALANCE_FLAG = 6;
                    break;
                case menu("Size 5"):
                    $SCENARIO_BALANCE_FLAG = 5;
                    break;
                case menu("Size 4"):
                    $SCENARIO_BALANCE_FLAG = 4;
                    break;
                case menu("Size 3"):
                    $SCENARIO_BALANCE_FLAG = 3;
                    break;
                case menu("Size 2"):
                    $SCENARIO_BALANCE_FLAG = 2;
                    break;
                case menu("Size 1"):
                    $SCENARIO_BALANCE_FLAG = 1;
                    break;
                case menu("Size 0"):
                    $SCENARIO_BALANCE_FLAG = 0;
                    break;

            }
            jump @debug_menu;
        case menu("Enable Performance Flags"):
            message_Close();
            message_Notice("[M:D2][CS:C]Pick a flag:[CR]");
            switch ( message_SwitchMenu(0, 1) ) {
                case menu('0: ???'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[0] = 1;
                    break;
                case menu('1: Team name'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[1] = 1;
                    break;
                case menu('2: Treasure Bag'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[2] = 1;
                    break;
                case menu('3: Random Mission'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[3] = 1;
                    break;
                case menu('4: Friend Rescue'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[4] = 1;
                    break;
                case menu('5: Friends'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[5] = 1;
                    break;
                case menu('6: Recruit Evolution'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[6] = 1;
                    break;
                case menu('7: Formation Change'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[7] = 1;
                    break;
                case menu('8: Move Alone / Training'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[8] = 1;
                    break;
                case menu('9: Post ending'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[9] = 1;
                    break;
                case menu('10: Hero + Partner Evo.'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[10] = 1;
                    break;
                case menu('11: Dojo clear'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[11] = 1;
                    break;
                case menu('12: Defeat Drowzee'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[12] = 1;
                    break;
                case menu('13: Defeat fake Groudon'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[13] = 1;
                    break;
                case menu('14: Defeat Luxray (Electrike lol)'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[14] = 1;
                    break;
                case menu('15: Cleared Future World'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[15] = 1;
                    break;
                case menu('16: Defeat Dusknoir'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[16] = 1;
                    break;
                case menu('17: Defeat Dialga (Post-Dialga)'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[17] = 1;
                    break;
                case menu('18: Defeat Darkrai'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[18] = 1;
                    break;
                case menu('19: Defeat Regigigas'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[19] = 1;
                    break;
                case menu('20: Guild Graduation'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[20] = 1;
                    break;
                case menu('21: Collect 7 Treasures'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[21] = 1;
                    break;
                case menu('22: Secret Rank'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[22] = 1;
                    break;
                case menu('23: Get Manaphy'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[23] = 1;
                    break;
                case menu('24: Manaphy ev. clear'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[24] = 1;
                    break;
                case menu('25: Chatot Repellant'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[25] = 1;
                    break;
                case menu('26: Jukebox'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[26] = 1;
                    break;
                case menu('27: Identify Waterfall'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[27] = 1;
                    break;
                case menu('28: Identify Quicksand'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[28] = 1;
                    break;
                case menu('29: Recruit Sensor'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[29] = 1;
                    break;
                case menu('30: ???'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[30] = 1;
                    break;
                case menu('31: ???'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[31] = 1;
                    break;
                case menu('32: Team Name Trap'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[32] = 1;
                    break;
                case menu('33: Unown Trap'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[33] = 1;
                    break;
                case menu('34: Sentry Trap'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[34] = 1;
                    break;
                case menu('35: Pelipper Package'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[35] = 1;
                    break;
                case menu('36: Touch Grass Trap'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[36] = 1;
                    break;
                case menu('37: Pelipper Base Only'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[37] = 1;
                    break;
                case menu('38: Dimensional Scream'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[38] = 1;
                    break;
                case menu('39: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[39] = 1;
                    break;
                case menu('40: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[40] = 1;
                    break;
                case menu('41: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[41] = 1;
                    break;
                case menu('42: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[42] = 1;
                    break;
                case menu('43: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[43] = 1;
                    break;
                case menu('44: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[44] = 1;
                    break;
                case menu('45: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[45] = 1;
                    break;
                case menu('46: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[46] = 1;
                    break;
                case menu('47: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[47] = 1;
                    break;
                case menu('48: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[48] = 1;
                    break;
                case menu('49: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[49] = 1;
                    break;
                case menu('50: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[50] = 1;
                    break;
                case menu('51: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[51] = 1;
                    break;
                case menu('52: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[52] = 1;
                    break;
                case menu('53: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[53] = 1;
                    break;
                case menu('54: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[54] = 1;
                    break;
                case menu('55: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[55] = 1;
                    break;
                case menu('56: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[56] = 1;
                    break;
                case menu('57: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[57] = 1;
                    break;
                case menu('58: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[58] = 1;
                    break;
                case menu('59: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[59] = 1;
                    break;
                case menu('60: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[60] = 1;
                    break;
                case menu('61: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[61] = 1;
                    break;
                case menu('62: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[62] = 1;
                    break;
                case menu('63: Unused?'):
                    message_Close();
                    $PERFORMANCE_PROGRESS_LIST[63] = 1;
                    break;
            }
            jump @debug_menu;
        case menu("Gib Money"):
            message_Close();
            $BANK_GOLD += 9999;
            $CARRY_GOLD += 9999;
            jump @debug_menu;
        case menu("Gib Items"):
            message_Close();
            message_Notice("[M:D2][CS:C]Select How:[CR]");
            switch ( message_SwitchMenu(0, 1) ) {
                case menu("1 Of Each"):
                    message_Close();
                    $EVENT_LOCAL = 0;
                    while ($EVENT_LOCAL < 1400) {
                        $ITEM_BACKUP = value($EVENT_LOCAL);
                        $ITEM_BACKUP[1] = 99;
                        item_SetVariable(0,$ITEM_BACKUP);
                        switch(ProcessSpecial(PROCESS_SPECIAL_IS_BAG_FULL,0,0)) {
                            case 0:
                                ProcessSpecial(PROCESS_SPECIAL_ADD_TABLE_ITEM_TO_BAG,0,0);
                                break;
                            default:
                                switch(ProcessSpecial(57,0,0)) {
                                    case 0:
                                        ProcessSpecial(PROCESS_SPECIAL_ADD_TABLE_ITEM_TO_STORAGE,0,0);
                                        break;
                                    default:
                                        message_Mail("Storage Full!");
                                        message_Close();
                                        jump @debug_menu;
                                }
                                break;
                        }
                        $EVENT_LOCAL += 1;       
                    }
                    break;
                case menu("Good Stuff"):
                    message_Close();
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,24,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,33,0);
                    
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,70,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,70,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,70,0);
                    
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,99,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,99,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,99,0);
                    
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,115,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,115,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,115,0);
                    
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,73,0);
                    
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,79,0);
                    
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,182,0);
                    
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,319,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,319,0);
                    ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,319,0);
                    break;
                case menu("Golden Seeds (x40)"):
                    message_Close();
                    $EVENT_LOCAL = 0;
                    while ($EVENT_LOCAL < 40) {
                        ProcessSpecial(PROCESS_SPECIAL_ADD_ITEM_TO_BAG,93,0);
                        $EVENT_LOCAL += 1;
                    }
                    break;
                case menu("Sticks & Stones"):
                    message_Close();
                    $EVENT_LOCAL = 0;
                    while ($EVENT_LOCAL < 11) {
                        $ITEM_BACKUP = value($EVENT_LOCAL);
                        $ITEM_BACKUP[1] = 99;
                        item_SetVariable(0,$ITEM_BACKUP);
                        switch(ProcessSpecial(PROCESS_SPECIAL_IS_BAG_FULL,0,0)) {
                            case 0:
                                ProcessSpecial(PROCESS_SPECIAL_ADD_TABLE_ITEM_TO_BAG,0,0);
                                break;
                            default:
                                switch(ProcessSpecial(57,0,0)) {
                                    case 0:
                                        ProcessSpecial(PROCESS_SPECIAL_ADD_TABLE_ITEM_TO_STORAGE,0,0);
                                        break;
                                    default:
                                        message_Mail("Storage Full!");
                                        message_Close();
                                        jump @debug_menu;
                                }
                                break;
                        }
                        $EVENT_LOCAL += 1;       
                    }
                    break;
            }
            jump @debug_menu;
        case menu("Cancel"):
            message_Close();
            break;
    }
    jump @decision_tree;
    §variable_checkup;
    message_Mail("[STS][CS:S]$VERSION[CR]: [var:0:0]   [CS:S]$CONDITION[CR]: [var:1:0]\n[CS:S]$SCEN   SELECT         MAIN          SIDE[CR]\n      ~5b[var:2:0], [var:2:1]~5d ~5b[var:3:0], [var:3:1]~5d ~5b[var:4:0], [var:4:1]~5d[STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_SUBX[CR]: ~5b[var:5:0] [var:5:1]~5d, ~5b[var:6:0], [var:6:1]~5d\n     ~5b[var:7:0], [var:7:1]~5d, ~5b[var:8:0], [var:8:1]~5d, ~5b[var:9:0], [var:9:1]~5d\n     ~5b[var:10:0], [var:10:1]~5d, ~5b[var:11:0], [var:11:1]~5d, ~5b[var:12:0], [var:12:1]~5d[STE][W:10]");
    message_Mail("[STS][CS:S]$SIDE02_TALK[CR]:   [qbby:3145741]  [CS:S]$SIDE06_ROOM[CR]:  [qbby:3145742]\n[CS:S]$SIDE08_BOSS2ND[CR]: [qbby:1048591]  [CS:S]$SIDE01_BOSS2ND[CR]: [qbby:1048592]\n[STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG[CR] (1/2)\n00: [qbby:33554449]\n02: [qbby:33562641][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG[CR] (2/2)\n04: [qbby:33570833]\n06: [qbby:33579025][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_TALK_BIT_FLAG[CR] (1/4)\n00: [qbby:33554450]\n02: [qbby:33562642][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_TALK_BIT_FLAG[CR] (2/4)\n04: [qbby:33570834]\n06: [qbby:33579026][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_TALK_BIT_FLAG[CR] (3/4)\n08: [qbby:33587218]\n0A: [qbby:33595410][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_TALK_BIT_FLAG[CR] (4/4)\n0C: [qbby:33603602]\n0E: [qbby:33611794][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_BALANCE_FLAG[CR]: [var:19:0]\n[CS:S]$SCENARIO_BALANCE_DEBUG[CR]: [var:20:0][STE][W:10]");
    message_Mail("[STS][CS:S]$CRYSTAL_COLOR_01[CR]: [var:21:0]\n[CS:S]$CRYSTAL_COLOR_02[CR]: [var:22:0]\n[CS:S]$CRYSTAL_COLOR_03[CR]: [var:23:0][STE][W:10]");
    message_Mail("[STS][CS:S]$COMPULSORY_SAVE_POINT[CR]: [var:24:0]\n[CS:S]$COMPULSORY_SAVE_POINT_SIDE[CR]: [var:25:0]\n[STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_SELECT_BACKUP[CR]: \n~5B[var:26:0], [var:26:1], [var:26:2], [var:26:3], [var:26:4], [var:26:5], [var:26:6], [var:26:7]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (1/8)\n00: [qbby:33554459]\n02: [qbby:33562651][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (2/8)\n04: [qbby:33570843]\n06: [qbby:33579035][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (3/8)\n08: [qbby:33587227]\n0A: [qbby:33595419][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (4/8)\n0C: [qbby:33603611]\n0E: [qbby:33611803][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (5/8)\n10: [qbby:33619995]\n12: [qbby:33628187][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (6/8)\n14: [qbby:33636379]\n16: [qbby:33644571][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (7/8)\n18: [qbby:33652763]\n1A: [qbby:33660955][STE][W:10]");
    message_Mail("[STS][CS:S]$SCENARIO_MAIN_BIT_FLAG_BACKUP[CR] (8/8)\n1C: [qbby:33669147]\n1E: [qbby:33677339][STE][W:10]");
    message_Mail("[STS][CS:S]$GROUND_ENTER[CR]: [var:28:0]\n[CS:S]$GROUND_ENTER_BACKUP[CR]: \n~5B[var:33:0], [var:33:1], [var:33:2], [var:33:3], [var:33:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$GROUND_ENTER_LINK[CR]: [var:29:0]\n[CS:S]$GROUND_ENTER_LINK_BACKUP[CR]: \n~5B[var:34:0], [var:34:1], [var:34:2], [var:34:3], [var:34:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$GROUND_GETOUT[CR]: [var:30:0]\n[CS:S]$GROUND_GETOUT_BACKUP[CR]: \n~5B[var:35:0], [var:35:1], [var:35:2], [var:35:3], [var:35:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$GROUND_MAP[CR]: [var:31:0]\n[CS:S]$GROUND_MAP_BACKUP[CR]: \n~5B[var:36:0], [var:36:1], [var:36:2], [var:36:3], [var:36:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$GROUND_PLACE[CR]: [var:32:0]\n[CS:S]$GROUND_PLACE_BACKUP[CR]: \n~5B[var:37:0], [var:37:1], [var:37:2], [var:37:3], [var:37:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_SELECT[CR]: [var:38:0][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER[CR]: [var:39:0]\n[CS:S]$DUNGEON_ENTER_BACKUP[CR]: \n~5B[var:45:0], [var:45:1], [var:45:2], [var:45:3], [var:45:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER_MODE[CR]: [var:40:0]\n[CS:S]$DUNGEON_ENTER_MODE_BACKUP[CR]: \n~5B[var:46:0], [var:46:1], [var:46:2], [var:46:3], [var:46:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER_INDEX[CR]: [var:41:0]\n[CS:S]$DUNGEON_ENTER_INDEX_BACKUP[CR]: \n~5B[var:47:0], [var:47:1], [var:47:2], [var:47:3], [var:47:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER_FREQUENCY[CR]: [var:42:0]\n[CS:S]$DUNGEON_ENTER_FREQUENCY_BACKUP[CR]: \n~5B[var:48:0], [var:48:1], [var:48:2], [var:48:3], [var:48:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_RESULT[CR]: [var:43:0]\n[CS:S]$DUNGEON_RESULT_BACKUP[CR]: \n~5B[var:49:0], [var:49:1], [var:49:2], [var:49:3], [var:49:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$GROUND_START_MODE[CR]: [var:44:0]\n[CS:S]$GROUND_START_MODE_BACKUP[CR]: \n~5B[var:50:0], [var:50:1], [var:50:2], [var:50:3], [var:50:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$REQUEST_CLEAR_COUNT[CR]: [var:51:0]\n[CS:S]$FRIEND_SUM[CR]: [var:58:0]\n[CS:S]$UNIT_SUM[CR]: [var:59:0][STE][W:10]");
    message_Mail("[STS][CS:S]$PLAYER_KIND[CR]: [var:52:0]\n[CS:S]$PLAYER_KIND_BACKUP[CR]: \n~5B[var:55:0], [var:55:1], [var:55:2], [var:55:3], [var:55:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$ATTENDANT1_KIND[CR]: [var:53:0]\n[CS:S]$ATTENDANT1_KIND_BACKUP[CR]: \n~5B[var:56:0], [var:56:1], [var:56:2], [var:56:3], [var:56:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$ATTENDANT2_KIND[CR]: [var:54:0]\n[CS:S]$ATTENDANT2_KIND_BACKUP[CR]: \n~5B[var:57:0], [var:57:1], [var:57:2], [var:57:3], [var:57:4]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$CARRY_GOLD[CR]: [var:60:0]\n[CS:S]$BANK_GOLD[CR]: [var:61:0][STE][W:10]");
    message_Mail("[STS][CS:S]$HERO_FIRST_KIND[CR]: [var:62:0]\n[CS:S]$HERO_FIRST_NAME[CR]: \n~5B[var:63:0], [var:63:1], [var:63:2], [var:63:3], [var:63:4], [var:63:5], [var:63:6], [var:63:7], [var:63:8], [var:63:9]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$PARTNER_FIRST_KIND[CR]: [var:64:0]\n[CS:S]$PARTNER_FIRST_NAME[CR]: \n~5B[var:65:0], [var:65:1], [var:65:2], [var:65:3], [var:65:4], [var:65:5], [var:65:6], [var:65:7], [var:65:8], [var:65:9]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$HERO_TALK_KIND[CR]: [var:66:0]\n[CS:S]$PARTNER_TALK_KIND[CR]: [var:67:0]\n[CS:S]$CONFIG_COLOR_KIND[CR]: [var:69:0][STE][W:10]");
    message_Mail("[STS][CS:S]$RANDOM_REQUEST_NPC03_KIND[CR]: [var:68:0]\n[CS:S]$ROM_VARIATION[CR]: [var:70:0]\n[CS:S]$LANGUAGE_TYPE[CR]: [var:71:0][STE][W:10]");
    message_Mail("[STS][CS:S]$GAME_MODE[CR]: [var:72:0]\n[CS:S]$EXECUTE_SPECIAL_EPISODE_TYPE[CR]: [var:73:0]\n[CS:S]$SPECIAL_EPISODE_TYPE[CR]: [var:74:0][STE][W:10]");
    message_Mail("[STS][CS:S]$SPECIAL_EPISODE_OPEN[CR]:     [qbby:8388683]\n[CS:S]$SPECIAL_EPISODE_OPEN_OLD[CR]: [qbby:8388684]\n[CS:S]$SPECIAL_EPISODE_CONQUEST[CR]: [qbby:8388685][STE][W:10]");
    message_Mail("[STS][CS:S]$PERFORMANCE_PROGRESS_LIST[CR] (1/1)\n00: [qbby:33554510]\n02: [qbby:33562702][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_OPEN_LIST[CR] (1/4)\n00: [qbby:33554511]\n02: [qbby:33562703][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_OPEN_LIST[CR] (2/4)\n04: [qbby:33570895]\n06: [qbby:33579087][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_OPEN_LIST[CR] (3/4)\n08: [qbby:33587279]\n0A: [qbby:33595471][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_OPEN_LIST[CR] (4/4)\n0C: [qbby:33603663]\n0E: [qbby:33611855][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER_LIST[CR] (1/4)\n00: [qbby:33554512]\n02: [qbby:33562704][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER_LIST[CR] (2/4)\n04: [qbby:33570896]\n06: [qbby:33579088][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER_LIST[CR] (3/4)\n08: [qbby:33587280]\n0A: [qbby:33595472][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ENTER_LIST[CR] (4/4)\n0C: [qbby:33603664]\n0E: [qbby:33611856][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ARRIVE_LIST[CR] (1/4)\n00: [qbby:33554513]\n02: [qbby:33562705][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ARRIVE_LIST[CR] (2/4)\n04: [qbby:33570897]\n06: [qbby:33579089][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ARRIVE_LIST[CR] (3/4)\n08: [qbby:33587281]\n0A: [qbby:33595473][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_ARRIVE_LIST[CR] (4/4)\n0C: [qbby:33603665]\n0E: [qbby:33611857][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_CONQUEST_LIST[CR] (1/4)\n00: [qbby:33554514]\n02: [qbby:33562706][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_CONQUEST_LIST[CR] (2/4)\n04: [qbby:33570898]\n06: [qbby:33579090][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_CONQUEST_LIST[CR] (3/4)\n08: [qbby:33587282]\n0A: [qbby:33595474][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_CONQUEST_LIST[CR] (4/4)\n0C: [qbby:33603666]\n0E: [qbby:33611858][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_PRESENT_LIST[CR] (1/4)\n00: [qbby:33554515]\n02: [qbby:33562707][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_PRESENT_LIST[CR] (2/4)\n04: [qbby:33570899]\n06: [qbby:33579091][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_PRESENT_LIST[CR] (3/4)\n08: [qbby:33587283]\n0A: [qbby:33595475][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_PRESENT_LIST[CR] (4/4)\n0C: [qbby:33603667]\n0E: [qbby:33611859][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_REQUEST_LIST[CR] (1/4)\n00: [qbby:33554516]\n02: [qbby:33562708][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_REQUEST_LIST[CR] (2/4)\n04: [qbby:33570900]\n06: [qbby:33579092][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_REQUEST_LIST[CR] (3/4)\n08: [qbby:33587284]\n0A: [qbby:33595476][STE][W:10]");
    message_Mail("[STS][CS:S]$DUNGEON_REQUEST_LIST[CR] (4/4)\n0C: [qbby:33603668]\n0E: [qbby:33611860][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_NORMAL[CR] (1/5)\n00: [qbby:33554517]\n02: [qbby:33562709][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_NORMAL[CR] (2/5)\n04: [qbby:33570901]\n06: [qbby:33579093][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_NORMAL[CR] (3/5)\n08: [qbby:33587285]\n0A: [qbby:33595477][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_NORMAL[CR] (4/5)\n0C: [qbby:33603669]\n0E: [qbby:33611861][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_NORMAL[CR] (5/5)\n10: [qbby:33620053]\n12: [qbby:33628245][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_SPECIAL[CR] (1/5)\n00: [qbby:33554518]\n02: [qbby:33562710][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_SPECIAL[CR] (2/5)\n04: [qbby:33570902]\n06: [qbby:33579094][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_SPECIAL[CR] (3/5)\n08: [qbby:33587286]\n0A: [qbby:33595478][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_SPECIAL[CR] (4/5)\n0C: [qbby:33603670]\n0E: [qbby:33611862][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_MARK_LIST_SPECIAL[CR] (5/5)\n10: [qbby:33620054]\n12: [qbby:33628246][STE][W:10]");
    message_Mail("[STS][CS:S]$WORLD_MAP_LEVEL[CR]: [var:87:0]\n[CS:S]$POSITION[CR] (1/2)     \n(x1 = [var:88:0], y1 = [var:89:0], z1 = [var:90:0], d1 = [var:91:0])\n(x2 = [var:88:1], y2 = [var:89:1], z2 = [var:90:1], d2 = [var:91:1])[STE][W:10]");
    message_Mail("[STS][CS:S]$POSITION[CR] (2/2)     \n(x3 = [var:88:2], y3 = [var:89:2], z3 = [var:90:2], d3 = [var:91:2])[STE][W:10]");
    message_Mail("[STS][CS:S]$EVENT_LOCAL[CR]: [var:92:0]\n[CS:S]$DUNGEON_EVENT_LOCAL[CR]: [var:93:0]\n[CS:S]$BIT_FUWARANTE_LOCAL[CR]: [qbby:5242978][STE][W:10]");
    message_Mail("[STS][CS:S]$STATION_ITEM[CR] ([CS:S]STATIC[CR], [CS:S]TEMP[CR])\nST: [qbby:33554526]\nTE: [qbby:33554527][STE][W:10]");
    message_Mail("[STS][CS:S]$DELIVER_ITEM[CR] ([CS:S]STATIC[CR], [CS:S]TEMP[CR])\nST: [qbby:16777312]\nTE: [qbby:16777313][STE][W:10]");
    message_Mail("[STS][CS:S]$ITEM_BACKUP[CR]: \n~D8: ~5B[var:100:0], [var:100:1]~5D  kurukure: ~5B[var:101:0], [var:101:1]~5D\ntake: ~5B[var:102:0], [var:102:1]~5D  get: ~5B[var:103:0], [var:103:1]~5D[STE][W:10]");
    message_Mail("[STS][CS:S]$REQUEST_THANKS_RESULT_KIND[CR]: [var:104:0]\n[CS:S]$REQUEST_THANKS_RESULT_VARIATION[CR]: [var:105:0]\n[CS:S]$TEAM_RANK_EVENT_LEVEL[CR]: [var:110:0][STE][W:10]");
    message_Mail("[STS][CS:S]$RECYCLE_COUNT[CR]: [var:108:0]\n[CS:S]SUB30[CR]: [CS:S]Treasure_Discover[CR] = [qbby:1048682], [CS:S]ProjectP[CR] = [qbby:1048689]\n[CS:S]SUB30[CR]: [CS:S]Spot_Discover[CR] = [qbby:1048683], [CS:S]Spot_Level[CR] = [var:109:0][STE][W:10]");
    message_Mail("[STS][CS:S]$LOTTERY_RESULT[CR]: [var:99:0]\n[CS:S]$PLAY_OLD_GAME[CR]: [var:111:0]\n[CS:S]$NOTE_MODIFY_FLAG[CR]: [var:112:0][STE][W:10]");
    message_Mail("[STS][CS:S]$SUM[CR]: [var:114:0][STE][W:10]");
    if (not debug) {
        switch(ProcessSpecial(112,0,0)) {
            case 1:
                message_Mail("Bag Size: 1 item!");
                break;
            case 16:
                message_Mail("Bag Size: 16 items!");
                break;
            case 24:
                message_Mail("Bag Size: 24 items!");
                break;
            case 32:
                message_Mail("Bag Size: 32 items!");
                break;
            case 40:
                message_Mail("Bag Size: 40 items!");
                break;
            case 48:
                message_Mail("Bag Size: 48 items!");
                break;
            default:
                message_Mail("Bag Size: Invalid!\nReport this bug to [CS:G]Chesyon[CR] immediately!");
                break;
        }
        
        switch(ProcessSpecial(109, 0,0)) {
            case >= 8: // MASTER
                message_Mail("Guild Rank: Master or Above");
                break;
            case 7: // HYPER
                message_Mail("Guild Rank: Hyper");
                break;
            case 6: // ULTRA
                message_Mail("Guild Rank: Ultra");
                break;
            case 5: // SUPER
                message_Mail("Guild Rank: Super");
                break;
            case 4: // DIAMOND
                message_Mail("Guild Rank: Diamond");
                break;
            case 3: // GOLD
                message_Mail("Guild Rank: Gold");
                break;
            case 2: // SILVER
                message_Mail("Guild Rank: Silver");
                break;
            case 1: // BRONZE
                message_Mail("Guild Rank: Bronze");
                break;
            case 0:
                message_Mail("Guild Rank: Normal");
                break;
            default:
                message_Mail("Guild Rank: Unknown");
                break;
        }
    }
    message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
    message_Talk(" Finally, scroll through these\ndungeons please![K] Your choice does not matter,\nthis is NOT the crossroads.[K] Here we go!");
    message_Close();
    main_EnterAdventure(32767, 30);
    message_Close();
    return;
    §blue_gummi;
    message_SetFace(ACTOR_ATTENDANT1, FACE_NORMAL, FACE_POS_STANDARD);
    message_Talk(" According to notes from the\n[CS:X]Survey Team[CR], cross-referenced against our\ndungeon list...[W:60] Here\'s some [CS:I]Blue Gummi[CR] odds:");
    message_SetFace(ACTOR_ATTENDANT1, FACE_HAPPY, FACE_POS_STANDARD);
    switch(dungeon_mode(91)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Labyrinth Cave[CR]: [CS:C]1.2717%[CR] to [CS:C]3.6813[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(4)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Mt. Bristle[CR]: [CS:C]1.725%[CR] to [CS:C]3.45[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(85)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Mystery Jungle[CR]: [CS:C]1.25%[CR] to [CS:C]3.1[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(17)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Amp Plains[CR]: [CS:C]0.5132%[CR] to [CS:C]2.8853[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(99)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Zero Isle North[CR]: [CS:C]0.6833%[CR] to [CS:C]2.775[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(8)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Craggy Coast[CR]: [CS:C]2.6313%[CR] to [CS:C]2.6313[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(174)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Star Cave[CR]: [CS:C]1.26%[CR] to [CS:C]2.36[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(104)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Destiny Tower[CR]: [CS:C]0.33%[CR] to [CS:C]2.356[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(72)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Marine Resort[CR]: [CS:C]1.0667%[CR] to [CS:C]2.2364[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(101)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Zero Isle West[CR]: [CS:C]1.8406%[CR] to [CS:C]1.8406[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(7)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Apple Woods[CR]: [CS:C]1.5461%[CR] to [CS:C]1.5461[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(111)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Sky Peak[CR]: [CS:C]1.3875%[CR] to [CS:C]1.3875[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(6)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Waterfall Cave[CR]: [CS:C]1.1654%[CR] to [CS:C]1.1654[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(3)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Drenched Bluff[CR]: [CS:C]1.122%[CR] to [CS:C]1.122[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(191)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Dojo: Final Maze[CR]: [CS:C]0.6096%[CR] to [CS:C]0.6096[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(12)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Foggy Forest[CR]: [CS:C]0.5676%[CR] to [CS:C]0.5676[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(64)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Spacial Rift[CR]: [CS:C]0.5318%[CR] to [CS:C]0.5318[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(94)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Happy Outlook[CR]: [CS:C]0.5277%[CR] to [CS:C]0.5277[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(67)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Dark Crater[CR]: [CS:C]0.5208%[CR] to [CS:C]0.5208[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(14)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Steam Cave[CR]: [CS:C]0.5132%[CR] to [CS:C]0.5132[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(25)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Crystal Crossing[CR]: [CS:C]0.5132%[CR] to [CS:C]0.5132[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(47)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Crevice Cave[CR]: [CS:C]0.4929%[CR] to [CS:C]0.4929[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(35)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Brine Cave[CR]: [CS:C]0.4879%[CR] to [CS:C]0.4879[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(54)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Aegis Cave[CR]: [CS:C]0.4767%[CR] to [CS:C]0.4767[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(34)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Treeshroud Forest[CR]: [CS:C]0.4724%[CR] to [CS:C]0.4724[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(38)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Hidden Land[CR]: [CS:C]0.4415%[CR] to [CS:C]0.472[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(41)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Temporal Tower[CR]: [CS:C]0.4415%[CR] to [CS:C]0.472[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(95)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Mt. Mistral[CR]: [CS:C]0.4555%[CR] to [CS:C]0.4555[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(10)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Mt. Horn[CR]: [CS:C]0.1614%[CR] to [CS:C]0.4281[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(24)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Crystal Cave[CR]: [CS:C]0.3544%[CR] to [CS:C]0.3544[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(108)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Treacherous Waters[CR]: [CS:C]0.33%[CR] to [CS:C]0.33[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(109)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Southeastern Islands[CR]: [CS:C]0.33%[CR] to [CS:C]0.33[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(110)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Inferno Cave[CR]: [CS:C]0.33%[CR] to [CS:C]0.33[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(50)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Surrounded Sea[CR]: [CS:C]0.1513%[CR] to [CS:C]0.1513[CR]% per floor");
        default:
            break;
    }
    switch(dungeon_mode(51)) {
        case DMODE_OPEN:
        case DMODE_OPEN_AND_REQUEST:
            message_Talk("[CS:P]Miracle Sea[CR]: [CS:C]0.1369%[CR] to [CS:C]0.1369[CR]% per floor");
        default:
            break;
    }
    CallCommon(CORO_MESSAGE_CLOSE_WAIT_FUNC);
    message_Talk(" Feel free to ask me\nfor that data again at any time!");
    message_Close();
    return;
}
